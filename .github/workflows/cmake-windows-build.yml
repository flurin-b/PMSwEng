name: Windows Release Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.4.3
  ARTIFACT:     windows-build
  BUILD_TYPE:   Release

jobs:
  build:
    runs-on:  windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f
          
#      - name: Install Qt
#        uses: jurplel/install-qt-action@v3
#        with:
#          version:      ${{ env.QT_VERSION }}
#          host:         windows
#          target:       desktop
#          arch:         win64_msvc2019_64
#          dir:          ${{ runner.temp }}
##          modules:      
#          setup-python: false

      - name: Install Static Qt
        uses: anthepro/install-qt-static@v1
        with:
          version: ${{ env.QT_VERSION }}
          host:         windows
          target:       desktop
          arch:         win64_msvc2019_64
          dir:          ${{ runner.temp }}
          setup-python: false
          configure-args: -opensource -opengl desktop
          submodules: qtbase,qtshadertools,qtdeclarative
      
      - name: Create build directory
        run:  mkdir ${{ runner.temp }}\build

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Build
        working-directory: ${{ runner.temp }}\build
        run:  |
          cd ${{github.workspace}}/PacMan/
          cmake -S . -B ${{ runner.temp }}\build -G Ninja
          cmake --build ${{ runner.temp }}\build --config ${{env.BUILD_TYPE}}
      - name: Deploy
        working-directory: ${{ runner.temp }}\build
        run:  windeployqt ./
              
      - name: Test
        working-directory: ${{ runner.temp }}\build
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
        
      - name: Save build artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\build\
